// <auto-generated />
using GMonitoria.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GMonitoria.Infrastructure.Data.Migrations
{
    [DbContext(typeof(GMonitoriaContextGenerate))]
    [Migration("20180406194851_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Aluno", b =>
                {
                    b.Property<string>("Matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MATRICULA")
                        .HasMaxLength(200);

                    b.Property<string>("Xaluno")
                        .IsRequired()
                        .HasColumnName("XALUNO")
                        .HasMaxLength(200);

                    b.HasKey("Matricula");

                    b.ToTable("ALUNO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.ComponenteCurricular", b =>
                {
                    b.Property<string>("ComponenteCurricularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COMPONENTE_CURRICULAR_ID")
                        .HasMaxLength(200);

                    b.Property<string>("CursoId")
                        .IsRequired()
                        .HasColumnName("CURSO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("ProfessorId")
                        .IsRequired()
                        .HasColumnName("PROFESSOR_ID")
                        .HasMaxLength(200);

                    b.Property<string>("XcomponenteCurricular")
                        .IsRequired()
                        .HasColumnName("XCOMPONENTE_CURRICULAR")
                        .HasMaxLength(200);

                    b.HasKey("ComponenteCurricularId");

                    b.HasIndex("CursoId")
                        .HasName("FK_COMPONENTE_CURRICULAR_CURSO");

                    b.HasIndex("ProfessorId")
                        .HasName("FK_COMPONENTE_CURRICULAR_PROFESSOR");

                    b.ToTable("COMPONENTE_CURRICULAR");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Coordenador", b =>
                {
                    b.Property<string>("CoordenadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COORDENADOR_ID")
                        .HasMaxLength(200);

                    b.Property<string>("CursoId")
                        .IsRequired()
                        .HasColumnName("CURSO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("Xcoordenador")
                        .IsRequired()
                        .HasColumnName("XCOORDENADOR")
                        .HasMaxLength(200);

                    b.HasKey("CoordenadorId");

                    b.HasIndex("CursoId")
                        .HasName("FK_COORDENADOR_CURRICULAR_CURSO");

                    b.ToTable("COORDENADOR");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Curso", b =>
                {
                    b.Property<string>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CURSO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("Xcurso")
                        .IsRequired()
                        .HasColumnName("XCURSO")
                        .HasMaxLength(200);

                    b.HasKey("CursoId");

                    b.ToTable("CURSO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.HorarioAtendimento", b =>
                {
                    b.Property<string>("HorarioAtendimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HORARIO_ATENDIMENTO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("DiaDaSemana")
                        .IsRequired()
                        .HasColumnName("DIA_DA_SEMANA")
                        .HasMaxLength(200);

                    b.Property<DateTime>("HoraFim")
                        .HasColumnName("HORA_FIM")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnName("HORA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<string>("InscricaoId")
                        .IsRequired()
                        .HasColumnName("INSCRICAO_ID")
                        .HasMaxLength(200);

                    b.Property<int>("Mes")
                        .HasColumnName("MES")
                        .HasColumnType("int(11)");

                    b.Property<string>("Sala")
                        .IsRequired()
                        .HasColumnName("SALA")
                        .HasMaxLength(200);

                    b.HasKey("HorarioAtendimentoId");

                    b.HasIndex("InscricaoId")
                        .HasName("FK_HORARIO_ATENDIMENTO_INSCRICAO");

                    b.ToTable("HORARIO_ATENDIMENTO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Inscricao", b =>
                {
                    b.Property<string>("InscricaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("INSCRICAO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasMaxLength(200);

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnName("MATRICULA")
                        .HasMaxLength(200);

                    b.Property<string>("Protocolo")
                        .IsRequired()
                        .HasColumnName("PROTOCOLO")
                        .HasMaxLength(200);

                    b.Property<string>("VagaRequisicaoId")
                        .IsRequired()
                        .HasColumnName("VAGA_REQUISICAO_ID")
                        .HasMaxLength(200);

                    b.HasKey("InscricaoId");

                    b.HasIndex("Matricula")
                        .HasName("FK_INSCRICAO_ALUNO");

                    b.HasIndex("VagaRequisicaoId")
                        .HasName("FK_INSCRICAO_VAGA_REQUISICAO");

                    b.ToTable("INSCRICAO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.InscricaoAceitacaoMonitoria", b =>
                {
                    b.Property<string>("InscricaoAceitacaoMonitoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("INSCRICAO_ACEITACAO_MONITORIA_ID")
                        .HasMaxLength(200);

                    b.Property<string>("InscricaoId")
                        .IsRequired()
                        .HasColumnName("INSCRICAO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("VagaId")
                        .IsRequired()
                        .HasColumnName("VAGA_ID")
                        .HasMaxLength(200);

                    b.HasKey("InscricaoAceitacaoMonitoriaId");

                    b.HasIndex("InscricaoId")
                        .HasName("FK_INSCRICAO_ACEITACAO_MONITORIA_INSCRICAO");

                    b.HasIndex("VagaId")
                        .HasName("FK_INSCRICAO_ACEITACAO_MONITORIA_VAGA");

                    b.ToTable("INSCRICAO_ACEITACAO_MONITORIA");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.InscricaoProva", b =>
                {
                    b.Property<string>("InscricaoProvaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("INSCRICAO_PROVA_ID")
                        .HasMaxLength(200);

                    b.Property<string>("InscricaoId")
                        .IsRequired()
                        .HasColumnName("INSCRICAO_ID")
                        .HasMaxLength(200);

                    b.Property<float>("Nota")
                        .HasColumnName("NOTA");

                    b.Property<string>("ProvaId")
                        .IsRequired()
                        .HasColumnName("PROVA_ID")
                        .HasMaxLength(200);

                    b.HasKey("InscricaoProvaId");

                    b.HasIndex("InscricaoId")
                        .HasName("FK_INSCRICAO_PROVA_INSCRICAO");

                    b.HasIndex("ProvaId")
                        .HasName("FK_INSCRICAO_PROVA_PROVA");

                    b.ToTable("INSCRICAO_PROVA");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.InscricaoResultado", b =>
                {
                    b.Property<string>("InscricaoResultadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("INSCRICAO_RESULTADO_ID")
                        .HasMaxLength(200);

                    b.Property<int?>("Classificacao")
                        .HasColumnName("CLASSIFICACAO")
                        .HasColumnType("int(11)");

                    b.Property<string>("InscricaoId")
                        .IsRequired()
                        .HasColumnName("INSCRICAO_ID")
                        .HasMaxLength(200);

                    b.HasKey("InscricaoResultadoId");

                    b.HasIndex("InscricaoId")
                        .HasName("FK_INSCRICAO_RESULTADO_INSCRICAO");

                    b.ToTable("INSCRICAO_RESULTADO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.ProcessoSeletivo", b =>
                {
                    b.Property<string>("ProcessoSeletivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROCESSO_SELETIVO_ID")
                        .HasMaxLength(200);

                    b.Property<DateTime>("Datahora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsConcluido")
                        .HasColumnName("IS_CONCLUIDO")
                        .HasColumnType("bit(1)");

                    b.Property<bool>("IsIniciado")
                        .HasColumnName("IS_INICIADO")
                        .HasColumnType("bit(1)");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnName("PERIODO")
                        .HasMaxLength(6);

                    b.HasKey("ProcessoSeletivoId");

                    b.ToTable("PROCESSO_SELETIVO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.ProcessoSeletivoCurso", b =>
                {
                    b.Property<string>("ProcessoSeletivoCursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROCESSO_SELETIVO_CURSO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("CursoId")
                        .IsRequired()
                        .HasColumnName("CURSO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("ProcessoSeletivoId")
                        .IsRequired()
                        .HasColumnName("PROCESSO_SELETIVO_ID")
                        .HasMaxLength(200);

                    b.Property<string>("VagarRequisicaoId")
                        .IsRequired()
                        .HasColumnName("VAGAR_REQUISICAO_ID")
                        .HasMaxLength(200);

                    b.HasKey("ProcessoSeletivoCursoId");

                    b.HasIndex("CursoId")
                        .HasName("FK_PROCESSO_SELETIVO_CURSO_CURSO");

                    b.HasIndex("ProcessoSeletivoId")
                        .HasName("FK_PROCESSO_SELETIVO_CURSO_PROCESSO_SELETIVO");

                    b.ToTable("PROCESSO_SELETIVO_CURSO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Professor", b =>
                {
                    b.Property<string>("ProfessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROFESSOR_ID")
                        .HasMaxLength(200);

                    b.Property<string>("Xprofessor")
                        .IsRequired()
                        .HasColumnName("XPROFESSOR")
                        .HasMaxLength(200);

                    b.HasKey("ProfessorId");

                    b.ToTable("PROFESSOR");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Prova", b =>
                {
                    b.Property<string>("ProvaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROVA_ID")
                        .HasMaxLength(200);

                    b.Property<DateTime>("DatahoraAplicacao")
                        .HasColumnName("DATAHORA_APLICACAO")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsBolsa")
                        .HasColumnName("IS_BOLSA")
                        .HasColumnType("bit(1)");

                    b.Property<bool>("IsPratica")
                        .HasColumnName("IS_PRATICA")
                        .HasColumnType("bit(1)");

                    b.Property<bool>("IsTeoria")
                        .HasColumnName("IS_TEORIA")
                        .HasColumnType("bit(1)");

                    b.Property<string>("Sala")
                        .IsRequired()
                        .HasColumnName("SALA")
                        .HasMaxLength(200);

                    b.Property<string>("VagaRequisicaoId")
                        .IsRequired()
                        .HasColumnName("VAGA_REQUISICAO_ID")
                        .HasMaxLength(200);

                    b.HasKey("ProvaId");

                    b.HasIndex("VagaRequisicaoId")
                        .HasName("FK_PROVA_VAGA_REQUISICAO");

                    b.ToTable("PROVA");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Vaga", b =>
                {
                    b.Property<string>("VagaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VAGA_ID")
                        .HasMaxLength(200);

                    b.Property<bool>("IsBolsa")
                        .HasColumnName("IS_BOLSA")
                        .HasColumnType("bit(1)");

                    b.Property<int>("NumeroVaga")
                        .HasColumnName("NUMERO_VAGA")
                        .HasColumnType("int(11)");

                    b.Property<string>("VagaRequisicaoId")
                        .IsRequired()
                        .HasColumnName("VAGA_REQUISICAO_ID")
                        .HasMaxLength(200);

                    b.HasKey("VagaId");

                    b.HasIndex("VagaRequisicaoId")
                        .HasName("FK_VAGA_VAGA_REQUISICAO");

                    b.ToTable("VAGA");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.VagaRequisicao", b =>
                {
                    b.Property<string>("VagaRequisicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VAGA_REQUISICAO_ID")
                        .HasMaxLength(200);

                    b.Property<bool>("Aceitacao")
                        .HasColumnName("ACEITACAO")
                        .HasColumnType("bit(1)");

                    b.Property<string>("ComponenteCurricularId")
                        .IsRequired()
                        .HasColumnName("COMPONENTE_CURRICULAR_ID")
                        .HasMaxLength(200);

                    b.Property<string>("ProcessoSeletivoCursoId")
                        .IsRequired()
                        .HasColumnName("PROCESSO_SELETIVO_CURSO_ID")
                        .HasMaxLength(200);

                    b.Property<int>("ProcessoSeletivoSeletivoCursoId")
                        .HasColumnName("PROCESSO_SELETIVO_SELETIVO_CURSO_ID")
                        .HasColumnType("int(11)");

                    b.Property<string>("ProfessorId")
                        .IsRequired()
                        .HasColumnName("PROFESSOR_ID")
                        .HasMaxLength(200);

                    b.Property<int>("Quantidade")
                        .HasColumnName("QUANTIDADE")
                        .HasColumnType("int(11)");

                    b.Property<int?>("QuantidadeAceita")
                        .HasColumnName("QUANTIDADE_ACEITA")
                        .HasColumnType("int(11)");

                    b.Property<int?>("QuantidadeBolsa")
                        .HasColumnName("QUANTIDADE_BOLSA")
                        .HasColumnType("int(11)");

                    b.HasKey("VagaRequisicaoId");

                    b.HasIndex("ComponenteCurricularId")
                        .HasName("FK_VAGA_REQUISICAO_COMPONENTE_CURRICULAR");

                    b.HasIndex("ProcessoSeletivoCursoId")
                        .HasName("FK_VAGA_REQUISICAO_PROCESSO_SELETIVO_CURSO");

                    b.HasIndex("ProfessorId")
                        .HasName("FK_VAGA_REQUISICAO_PROFESSOR");

                    b.ToTable("VAGA_REQUISICAO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.ComponenteCurricular", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.Curso", "Curso")
                        .WithMany("ComponenteCurricular")
                        .HasForeignKey("CursoId")
                        .HasConstraintName("FK_COMPONENTE_CURRICULAR_CURSO");

                    b.HasOne("GMonitoria.Infrastructure.Data.Professor", "Professor")
                        .WithMany("ComponenteCurricular")
                        .HasForeignKey("ProfessorId")
                        .HasConstraintName("FK_COMPONENTE_CURRICULAR_PROFESSOR");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Coordenador", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.Curso", "Curso")
                        .WithMany("Coordenador")
                        .HasForeignKey("CursoId")
                        .HasConstraintName("FK_COORDENADOR_CURRICULAR_CURSO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.HorarioAtendimento", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.Inscricao", "Inscricao")
                        .WithMany("HorarioAtendimento")
                        .HasForeignKey("InscricaoId")
                        .HasConstraintName("FK_HORARIO_ATENDIMENTO_INSCRICAO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Inscricao", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.Aluno", "MatriculaNavigation")
                        .WithMany("Inscricao")
                        .HasForeignKey("Matricula")
                        .HasConstraintName("FK_INSCRICAO_ALUNO");

                    b.HasOne("GMonitoria.Infrastructure.Data.VagaRequisicao", "VagaRequisicao")
                        .WithMany("Inscricao")
                        .HasForeignKey("VagaRequisicaoId")
                        .HasConstraintName("FK_INSCRICAO_VAGA_REQUISICAO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.InscricaoAceitacaoMonitoria", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.Inscricao", "Inscricao")
                        .WithMany("InscricaoAceitacaoMonitoria")
                        .HasForeignKey("InscricaoId")
                        .HasConstraintName("FK_INSCRICAO_ACEITACAO_MONITORIA_INSCRICAO");

                    b.HasOne("GMonitoria.Infrastructure.Data.Vaga", "Vaga")
                        .WithMany("InscricaoAceitacaoMonitoria")
                        .HasForeignKey("VagaId")
                        .HasConstraintName("FK_INSCRICAO_ACEITACAO_MONITORIA_VAGA");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.InscricaoProva", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.Inscricao", "Inscricao")
                        .WithMany("InscricaoProva")
                        .HasForeignKey("InscricaoId")
                        .HasConstraintName("FK_INSCRICAO_PROVA_INSCRICAO");

                    b.HasOne("GMonitoria.Infrastructure.Data.Prova", "Prova")
                        .WithMany("InscricaoProva")
                        .HasForeignKey("ProvaId")
                        .HasConstraintName("FK_INSCRICAO_PROVA_PROVA");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.InscricaoResultado", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.Inscricao", "Inscricao")
                        .WithMany("InscricaoResultado")
                        .HasForeignKey("InscricaoId")
                        .HasConstraintName("FK_INSCRICAO_RESULTADO_INSCRICAO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.ProcessoSeletivoCurso", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.Curso", "Curso")
                        .WithMany("ProcessoSeletivoCurso")
                        .HasForeignKey("CursoId")
                        .HasConstraintName("FK_PROCESSO_SELETIVO_CURSO_CURSO");

                    b.HasOne("GMonitoria.Infrastructure.Data.ProcessoSeletivo", "ProcessoSeletivo")
                        .WithMany("ProcessoSeletivoCurso")
                        .HasForeignKey("ProcessoSeletivoId")
                        .HasConstraintName("FK_PROCESSO_SELETIVO_CURSO_PROCESSO_SELETIVO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Prova", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.VagaRequisicao", "VagaRequisicao")
                        .WithMany("Prova")
                        .HasForeignKey("VagaRequisicaoId")
                        .HasConstraintName("FK_PROVA_VAGA_REQUISICAO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.Vaga", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.VagaRequisicao", "VagaRequisicao")
                        .WithMany("Vaga")
                        .HasForeignKey("VagaRequisicaoId")
                        .HasConstraintName("FK_VAGA_VAGA_REQUISICAO");
                });

            modelBuilder.Entity("GMonitoria.Infrastructure.Data.VagaRequisicao", b =>
                {
                    b.HasOne("GMonitoria.Infrastructure.Data.ComponenteCurricular", "ComponenteCurricular")
                        .WithMany("VagaRequisicao")
                        .HasForeignKey("ComponenteCurricularId")
                        .HasConstraintName("FK_VAGA_REQUISICAO_COMPONENTE_CURRICULAR");

                    b.HasOne("GMonitoria.Infrastructure.Data.ProcessoSeletivoCurso", "ProcessoSeletivoCurso")
                        .WithMany("VagaRequisicao")
                        .HasForeignKey("ProcessoSeletivoCursoId")
                        .HasConstraintName("FK_VAGA_REQUISICAO_PROCESSO_SELETIVO_CURSO");

                    b.HasOne("GMonitoria.Infrastructure.Data.Professor", "Professor")
                        .WithMany("VagaRequisicao")
                        .HasForeignKey("ProfessorId")
                        .HasConstraintName("FK_VAGA_REQUISICAO_PROFESSOR");
                });
#pragma warning restore 612, 618
        }
    }
}
